library(reshape2)
library(gridExtra)
library(grid)
library(dplyr)
library(lattice)
source('PlotEigen.R')
source('PlotPCAScat.R')
source('PlotLoadings.R')
source('NormAll.R')
source('IntensData.R')
# Ex. 2
Wpos <- read.csv('wound_pos.csv', header = F)
Wneg <- read.csv('wound_neg.csv', header = F)
TimeVec <- read.csv('TimeVec.csv', header = F)
CondVec <- read.csv('CondVec.csv', header = F)
# Creating labels
A <- rep(c(0.1,0.1,0.2, 0.2,0.3,0.3,0.4,0.4), 4)
Labels <- cbind(t(A), TimeVec[,33:72])
# (a)
# Creating Sample
WposS <- Wpos[,6:77]
WnegS <- Wneg[,6:77]
IntensityPos <- IntensData(WposS, 'euk')
levelplot(IntensityPos*(-1))
levelplot(IntensityPos)
levelplot(solve(IntensityPos))
levelplot(IntensityPos)
library(ggplot2)
library(rARPACK)
library(reshape2)
library(gridExtra)
library(grid)
library(dplyr)
library(lattice)
source('PlotEigen.R')
source('PlotPCAScat.R')
source('PlotLoadings.R')
source('NormAll.R')
source('IntensData.R')
# Ex. 2
Wpos <- read.csv('wound_pos.csv', header = F)
Wneg <- read.csv('wound_neg.csv', header = F)
TimeVec <- read.csv('TimeVec.csv', header = F)
CondVec <- read.csv('CondVec.csv', header = F)
# Creating labels
A <- rep(c(0.1,0.1,0.2, 0.2,0.3,0.3,0.4,0.4), 4)
Labels <- cbind(t(A), TimeVec[,33:72])
# (a)
# Creating Sample
WposS <- Wpos[,6:77]
WnegS <- Wneg[,6:77]
# Eigenvalues
PlotEigen(WposS)
PlotEigen(WnegS)
# (b)
# Scatterplot of first two PC's
PlotPCAScat(WposS, Labels)
PlotPCAScat(WnegS, Labels)
# (c)
# Detecting outliers with loadings scatterplot
PlotLoadings(WposS)
PlotLoadings(WnegS)
WposNorm <- NormAll(WposS)
WnegNorm <- NormAll(WnegS)
# Eigenvalues
Eiglpos <- lapply(WposNorm, PlotEigen)
source('NormAll.R')
WposNorm <- NormAll(WposS)
WnegNorm <- NormAll(WnegS)
Eiglpos <- lapply(WposNorm, PlotEigen)
?svd
x <- WposS
covMat <- cov(t(x))
Eig <- svd(x)
EigVal <- as.data.frame(c(Eig[[1]]))
View(EigVal)
source('PlotEigen.R')
Eiglpos <- lapply(WposNorm, PlotEigen)
Eiglpos <- lapply(WposNorm[[1:3]], PlotEigen)
Eiglpos <- lapply(WposNorm[[c(1,2,3)]], PlotEigen)
source('NormAll.R')
Eiglpos <- lapply(WposNorm, PlotEigen)
WposNorm <- NormAll(WposS)
WnegNorm <- NormAll(WnegS)
Eiglpos <- lapply(WposNorm, PlotEigen)
marrangeGrob(Eiglpos, nrow = 2, ncol = 2)
covMat <- cov(t(x))
Eig <- svd(x)
#Eig <- eigen(covMat)
EigVal <- as.data.frame(c(Eig[[1]]))
View(EigVal)
ggplot(EigVal, aes(x = 1:nrow(covMat), y = Eig[[1]])) + theme_bw(15) + labs(x = NULL, y = 'Eigenvaule') +
geom_bar(stat="identity", position=position_dodge(), col = 'black', alpha = .5, fill = 'darkblue')
ggplot(EigVal, aes(x = 1:nrow(covMat), y = t(Eig[[1]]))) + theme_bw(15) + labs(x = NULL, y = 'Eigenvaule') +
geom_bar(stat="identity", position=position_dodge(), col = 'black', alpha = .5, fill = 'darkblue')
t(Eig[[1]]))
(Eig[[1]])
EigVal <- as.data.frame(Eig[[1]])
View(EigVal)
View(EigVal)
Eig <- eigen(covMat)
EigVal <- as.data.frame(Eig[[1]])
View(EigVal)
Eig <- svd(t(x))
Eig <- svd(x)
Eig <- svd(t(x))
x <- x-mean(x)
mean(x)
View(x)
x <- WposS
x <- x-mean(x)
View(x)
View(x)
View(x)
View(WposS)
c
x <- 10
x <- WposS
x <- x-mean(x)
mean(x)
View(x)
library(ggplot2)
library(rARPACK)
library(reshape2)
library(gridExtra)
library(grid)
library(dplyr)
library(lattice)
source('PlotEigen.R')
source('PlotPCAScat.R')
source('PlotLoadings.R')
source('NormAll.R')
source('IntensData.R')
# Ex. 2
Wpos <- read.csv('wound_pos.csv', header = F)
Wneg <- read.csv('wound_neg.csv', header = F)
TimeVec <- read.csv('TimeVec.csv', header = F)
CondVec <- read.csv('CondVec.csv', header = F)
# Creating labels
A <- rep(c(0.1,0.1,0.2, 0.2,0.3,0.3,0.4,0.4), 4)
Labels <- cbind(t(A), TimeVec[,33:72])
# (a)
# Creating Sample
WposS <- Wpos[,6:77]
WnegS <- Wneg[,6:77]
# Eigenvalues
PlotEigen(WposS)
PlotEigen(WnegS)
# (b)
# Scatterplot of first two PC's
PlotPCAScat(WposS, Labels)
PlotPCAScat(WnegS, Labels)
# (c)
# Detecting outliers with loadings scatterplot
PlotLoadings(WposS)
PlotLoadings(WnegS)
# Ex. 3
# (a)
# Normalizing data by euklidian, manhattan and standard deviation
WposNorm <- NormAll(WposS)
WnegNorm <- NormAll(WnegS)
?sd
ce <- WposNorm$Col.Euk
cm <- WposNorm$Col.Manhattan
cs <- WposNorm$Col.Er
View(ce)
View(cm)
View(cs)
View(Wpos)
View(WposS)
euk <- function(y){
y/sqrt(sum(y^2))
}
manhattan <- function(y){
y/sum(abs(y))
}
st.error <- function(y){
y/sd(y)
}
ee <- euk(WposS[,1])
WposS[,1]/ee
ee <- as.data.frame(ee)
View(ee)
View(ce)
ee <- euk(WposS[,e])
ee <- euk(WposS[,2])
euk <- function(y){
z <- y/sqrt(sum(y^2))
if(is.nan(y)){
z <- rep(0, length(y))
}
return(z)
}
manhattan <- function(y){
z <- y/sum(abs(y))
if(is.nan(y)){
z <- rep(0, length(y))
}
return(z)
}
st.error <- function(y){
z <- y/sd(y)
if(is.nan(y)){
z <- rep(0, length(y))
}
return(z)
}
x <- WposS
CE <- apply(x, 2,euk)
warnings()
?any
euk <- function(y){
z <- y/sqrt(sum(y^2))
if(any(is.nan(z))){
z <- rep(0, length(y))
}
return(z)
}
manhattan <- function(y){
z <- y/sum(abs(y))
if(any(is.nan(z))){
z <- rep(0, length(y))
}
return(z)
}
st.error <- function(y){
z <- y/sd(y)
if(any(is.nan(z))){
z <- rep(0, length(y))
}
return(z)
}
CE <- apply(x, 2,euk)
CM <- apply(x, 2, manhattan)
CS <- apply(x, 2, st.error)
View(CE)
View(CM)
View(CS)
CS <- apply(x, 2, st.error)
View(CS)
euk <- function(y){
z <- y/sqrt(sum(y^2))
if(any(is.nan(z))| any(z == Inf)){
z <- rep(0, length(y))
}
return(z)
}
manhattan <- function(y){
z <- y/sum(abs(y))
if(any(is.nan(z))| any(z == Inf)){
z <- rep(0, length(y))
}
return(z)
}
st.error <- function(y){
z <- y/sd(y)
if(any(is.nan(z)) | any(z == Inf)){
z <- rep(0, length(y))
}
return(z)
}
CS <- apply(x, 2, st.error)
View(CS)
WposNorm <- NormAll(WposS)
WnegNorm <- NormAll(WnegS)
# Eigenvalues
Eiglpos <- lapply(WposNorm, PlotEigen)
source('NormAll.R')
WposNorm <- NormAll(WposS)
WnegNorm <- NormAll(WnegS)
# Eigenvalues
Eiglpos <- lapply(WposNorm, PlotEigen)
marrangeGrob(Eiglpos, nrow = 2, ncol = 2)
marrangeGrob(Eiglpos, nrow = 2, ncol = 3)
Eiglneg <- lapply(WnegNorm, PlotEigen)
marrangeGrob(Eiglneg, nrow = 2, ncol = 3)
?svd
x <- WposS
x <- as.matrix(x)
x <- x - mean(x)
Eig <- svd(x)
EG <- Eig[[2]]
Data <- WposS
PC <- t(EG)%*%as.matrix(Data)
X <- as.data.frame(cbind(t(PC), t(Labels)))
X$V3 <- as.factor(X$V3)
ggplot(X, aes(x = V1, y = V2, fill = V3, shape = V3), alpha = 1) + geom_point(size = 3.5) + theme_bw(15) +
scale_fill_manual(values = c("#00800080", "#0000A080", "#FF000080",'black',
"#00800080", "#0000A080", "#FF000080", 'black'),
labels = c('1 Unwounded', '1 Harvested 0.5','1 Harvested 2', '1 Harvested 5',
'2 Unwounded', '2 Harvested 0.5','2 Harvested 2', '2 Harvested 5')) +
scale_shape_manual(values = c(21,21,21,21,24,24,24,24),
labels = c('1 Unwounded', '1 Harvested 0.5','1 Harvested 2', '1 Harvested 5',
'2 Unwounded', '2 Harvested 0.5','2 Harvested 2', '2 Harvested 5')) +
labs(x = 'z1', y = 'z2', fill = 'Genes', shape = 'Genes')
View(X)
PC <- t(EG[,c(1,2)])%*%as.matrix(Data)
X <- as.data.frame(cbind(t(PC), t(Labels)))
X$V3 <- as.factor(X$V3)
ggplot(X, aes(x = V1, y = V2, fill = V3, shape = V3), alpha = 1) + geom_point(size = 3.5) + theme_bw(15) +
scale_fill_manual(values = c("#00800080", "#0000A080", "#FF000080",'black',
"#00800080", "#0000A080", "#FF000080", 'black'),
labels = c('1 Unwounded', '1 Harvested 0.5','1 Harvested 2', '1 Harvested 5',
'2 Unwounded', '2 Harvested 0.5','2 Harvested 2', '2 Harvested 5')) +
scale_shape_manual(values = c(21,21,21,21,24,24,24,24),
labels = c('1 Unwounded', '1 Harvested 0.5','1 Harvested 2', '1 Harvested 5',
'2 Unwounded', '2 Harvested 0.5','2 Harvested 2', '2 Harvested 5')) +
labs(x = 'z1', y = 'z2', fill = 'Genes', shape = 'Genes')
source('PlotPCAScat.R')
Scatplpos <- lapply(WposNorm, PlotPCAScat, Labels = Labels)
marrangeGrob(Scatplpos, nrow = 2, ncol = 3)
source('PlotPCAScat.R')
PlotPCAScat(WposS, Labels)
PlotPCAScat(WnegS, Labels)
Scatplpos <- lapply(WposNorm, PlotPCAScat, Labels = Labels)
marrangeGrob(Scatplpos, nrow = 2, ncol = 3)
Scatplneg <- lapply(WnegNorm, PlotPCAScat, Labels = Labels)
marrangeGrob(Scatplneg, nrow = 2, ncol = 3)
EG <- Eig[[2]][c(1,2)]
EG <- Eig[[2]]
source('PlotLoadings.R')
Loadlpos <- lapply(WposNorm, PlotLoadings)
marrangeGrob(Loadlpos, nrow = 2, ncol = 3)
source('PlotLoadings.R')
Loadlpos <- lapply(WposNorm, PlotLoadings)
marrangeGrob(Loadlpos, nrow = 2, ncol = 3)
Loadlneg <- lapply(WnegNorm, PlotLoadings)
marrangeGrob(Loadlneg, nrow = 2, ncol = 3)
library(ggplot2)
library(rARPACK)
library(reshape2)
library(gridExtra)
library(grid)
library(dplyr)
library(lattice)
source('PlotEigen.R')
source('PlotPCAScat.R')
source('PlotLoadings.R')
source('NormAll.R')
source('IntensData.R')
Wpos <- read.csv('wound_pos.csv', header = F)
Wneg <- read.csv('wound_neg.csv', header = F)
TimeVec <- read.csv('TimeVec.csv', header = F)
CondVec <- read.csv('CondVec.csv', header = F)
# Creating labels
A <- rep(c(0.1,0.1,0.2, 0.2,0.3,0.3,0.4,0.4), 4)
Labels <- cbind(t(A), TimeVec[,33:72])
# (a)
# Creating Sample
WposS <- Wpos[,6:77]
WnegS <- Wneg[,6:77]
# Eigenvalues
PlotEigen(WposS)
PlotEigen(WnegS)
# (b)
# Scatterplot of first two PC's
PlotPCAScat(WposS, Labels)
PlotPCAScat(WnegS, Labels)
# (c)
# Detecting outliers with loadings scatterplot
PlotLoadings(WposS)
PlotLoadings(WnegS)
# Ex. 3
# (a)
# Normalizing data by euklidian, manhattan and standard deviation
source('PlotLoadings.R')
PlotLoadings(WposS)
PlotLoadings(WnegS)
# Ex. 3
# (a)
# Normalizing data by euklidian, manhattan and standard deviation
WposNorm <- NormAll(WposS)
WnegNorm <- NormAll(WnegS)
# Eigenvalues
Eiglpos <- lapply(WposNorm, PlotEigen)
marrangeGrob(Eiglpos, nrow = 2, ncol = 3)
Eiglneg <- lapply(WnegNorm, PlotEigen)
marrangeGrob(Eiglneg, nrow = 2, ncol = 3)
?marrangeGrob
# Scatterplot of first two PC's
Scatplpos <- lapply(WposNorm, PlotPCAScat, Labels = Labels)
marrangeGrob(Scatplpos, nrow = 2, ncol = 3)
Scatplneg <- lapply(WnegNorm, PlotPCAScat, Labels = Labels)
marrangeGrob(Scatplneg, nrow = 2, ncol = 3)
# Loadings Plot
Loadlpos <- lapply(WposNorm, PlotLoadings)
marrangeGrob(Loadlpos, nrow = 2, ncol = 3)
Loadlneg <- lapply(WnegNorm, PlotLoadings)
marrangeGrob(Loadlneg, nrow = 2, ncol = 3)
# (b)
# Visalization of intensity
IntensityPos <- IntensData(WposS, 'euk')
levelplot(IntensityPos)
IntensityNeg <- IntensData(WnegS, 'euk')
levelplot(IntensityNeg)
x <- WposS
colnames(x) <- Labels
euk <- function(y){
z <- y/sqrt(sum(y^2))
if(any(is.nan(z))| any(z == Inf)){
z <- rep(0, length(y))
}
return(z)
}
manhattan <- function(y){
z <- y/sum(abs(y))
if(any(is.nan(z))| any(z == Inf)){
z <- rep(0, length(y))
}
return(z)
}
st.error <- function(y){
z <- y/sd(y)
if(any(is.nan(z)) | any(z == Inf)){
z <- rep(0, length(y))
}
return(z)
}
cn <- colnames(x)
View(WposS)
View(x)
MeanMat <- sapply(unique(cn), function(g) rowMeans(x[,cn==g,drop=FALSE]))
View(MeanMat)
x <- as.matrix(x)
x <- x - mean(x)
Eig <- svd(x)
EG <- Eig[[2]]
EGP <- as.data.frame(EG[,c(1,2)])
View(EGP)
Outlier <- rep(0, times = nrow(EGP))
Outlier <- ifelse(sqrt(rowSums(EGP*EGP)) > 0.06, '1', '0')
MeanMat <- cbind(MeanMat, Outlier)
Candidates <- matrix(as.numeric(subset(MeanMat, Outlier == 1)), nrow = sum(as.numeric(Outlier)))
View(Candidates)
Candidates <- Candidates[,-9]
View(Candidates)
source('IntensData.R')
IntensityPos <- IntensData(WposS, 'euk')
levelplot(IntensityPos)
IntensityNeg <- IntensData(WnegS, 'euk')
levelplot(IntensityNeg)
source('IntensData.R')
IntensityPos <- IntensData(WposS, 'euk')
levelplot(IntensityPos)
IntensityNeg <- IntensData(WnegS, 'euk')
levelplot(IntensityNeg)
source('IntensData.R')
IntensityPos <- IntensData(WposS, 'euk')
levelplot(IntensityPos)
View(Candidates)
IntensityPos <- IntensData(WposS, 0)
levelplot(IntensityPos)
IntensityPos <- IntensData(WposS, 'euk')
levelplot(IntensityPos)
marrangeGrob(Loadlpos, nrow = 2, ncol = 3)
############################################# Sheet 4 ###############################################
library(ggplot2)
library(rARPACK)
library(reshape2)
library(gridExtra)
library(grid)
library(dplyr)
library(lattice)
source('PlotEigen.R')
source('PlotPCAScat.R')
source('PlotLoadings.R')
source('NormAll.R')
source('IntensData.R')
# Ex. 2
Wpos <- read.csv('wound_pos.csv', header = F)
Wneg <- read.csv('wound_neg.csv', header = F)
TimeVec <- read.csv('TimeVec.csv', header = F)
CondVec <- read.csv('CondVec.csv', header = F)
# Creating labels
A <- rep(c(0.1,0.1,0.2, 0.2,0.3,0.3,0.4,0.4), 4)
Labels <- cbind(t(A), TimeVec[,33:72])
# (a)
# Creating Sample
WposS <- Wpos[,6:77]
WnegS <- Wneg[,6:77]
# Eigenvalues
PlotEigen(WposS)
PlotEigen(WnegS)
# (b)
# Scatterplot of first two PC's
PlotPCAScat(WposS, Labels)
PlotPCAScat(WnegS, Labels)
# Detecting outliers with loadings scatterplot
PlotLoadings(WposS)
PlotLoadings(WnegS)
View(PlotLoadings)
View(PlotLoadings)
# Ex. 3
# (a)
# Normalizing data by euklidian, manhattan and standard deviation
WposNorm <- NormAll(WposS)
WnegNorm <- NormAll(WnegS)
# Eigenvalues
Eiglpos <- lapply(WposNorm, PlotEigen)
marrangeGrob(Eiglpos, nrow = 2, ncol = 3)
Eiglneg <- lapply(WnegNorm, PlotEigen)
marrangeGrob(Eiglneg, nrow = 2, ncol = 3)
# Scatterplot of first two PC's
Scatplpos <- lapply(WposNorm, PlotPCAScat, Labels = Labels)
marrangeGrob(Scatplpos, nrow = 2, ncol = 3)
# Loadings Plot
Loadlpos <- lapply(WposNorm, PlotLoadings)
marrangeGrob(Loadlpos, nrow = 2, ncol = 3)
IntensityPos <- IntensData(WposS, 'euk')
levelplot(IntensityPos)
IntensityNeg <- IntensData(WnegS, 'euk')
levelplot(IntensityNeg)
